_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[88],{D3CO:function(s,e,a){"use strict";a.r(e);var t=a("MX0m"),n=a.n(t),i=a("q1tI"),o=a.n(i),c=a("KtV6"),l=o.a.createElement;e.default=function(){return l(o.a.Fragment,null,l(c.b,{title:"Functional Analysis",slug:"functional-analysis",answer:"LISP MACHINE",authors:"Written by Justin Yokota"},l("p",{className:"jsx-1515271254"},'The puzzle is presented as an interactive submission box, where nonnegative inputs are accepted. After this is a "final exam" box.'),l("p",{className:"jsx-1515271254"},"Experimenting with the main puzzle shows that when submitting a number, the submission box responds with an equation, and a result. The equation is directly related to the number provided, and uses 10 different black box functions; for example, the number ",l("span",{className:"jsx-1515271254 monospace"},"904")," yields the equation ",l("span",{className:"jsx-1515271254 monospace"},"(round(f9 (f0 (f4 (904)))))"),", and the result of evaluating that equation. Leading zeros are stripped from numbers provided, though ",l("span",{className:"jsx-1515271254 monospace"},"0"),' is a valid input. Furthermore, if at any point after the first function the number in consideration exceeds 100 digits or becomes negative, the input is rejected with an appropriate error message. Some other functions reject certain values, and provide a generic "The input was rejected" result.'),l("p",{className:"jsx-1515271254"},"Using this, the goal is to determine what the functions are. Several strategies can be used to solve this; each ends up going through a slightly different solve path:"),l("p",{className:"jsx-1515271254 indent"},"Strategy 1: Try repdigits (",l("span",{className:"jsx-1515271254 monospace"},"111"),", ",l("span",{className:"jsx-1515271254 monospace"},"222222"),", etc.) to see how single functions work. This tends to be an easy start point, and gives ",l("span",{className:"jsx-1515271254 monospace"},"f8"),", ",l("span",{className:"jsx-1515271254 monospace"},"f7"),", and ",l("span",{className:"jsx-1515271254 monospace"},"f4")," easily."),l("p",{className:"jsx-1515271254 indent"},"Strategy 2: Try to check big results through ",l("a",{href:"https://www.wolframalpha.com/",className:"jsx-1515271254"},"Wolfram|Alpha")," or some similar software. This ends up finding ",l("span",{className:"jsx-1515271254 monospace"},"f1")," and ",l("span",{className:"jsx-1515271254 monospace"},"f0")," first."),l("p",{className:"jsx-1515271254 indent"},"Strategy 3: Use ",l("span",{className:"jsx-1515271254 monospace"},"f9")," as if the function is the identity (since it acts as an identity for 4-digit numbers or less). This tends to be an accidental strategy used (since ",l("span",{className:"jsx-1515271254 monospace"},"f9")," looks very much like an identity), but ends up finding ",l("span",{className:"jsx-1515271254 monospace"},"f9")," early, since it is possible to realize that ",l("span",{className:"jsx-1515271254 monospace"},"f9")," isn't an identity early."),l("p",{className:"jsx-1515271254"},"The functions are as follows:"),l("p",{className:"jsx-1515271254 func indent"},l("span",{className:"jsx-1515271254 monospace"},"f0"),': Append "19" to the beginning of the function.'),l("p",{className:"jsx-1515271254 func indent"},l("span",{className:"jsx-1515271254 monospace"},"f1"),": Take the 9",l("sup",{className:"jsx-1515271254"},"th")," power."),l("p",{className:"jsx-1515271254 func indent"},l("span",{className:"jsx-1515271254 monospace"},"f2"),": Take 3 to the n",l("sup",{className:"jsx-1515271254"},"th")," power, where n is the input."),l("p",{className:"jsx-1515271254 func indent"},l("span",{className:"jsx-1515271254 monospace"},"f3"),": Divide by 14."),l("p",{className:"jsx-1515271254 func indent"},l("span",{className:"jsx-1515271254 monospace"},"f4"),": Multiply by 13."),l("p",{className:"jsx-1515271254 func indent"},l("span",{className:"jsx-1515271254 monospace"},"f5"),": Take the 5",l("sup",{className:"jsx-1515271254"},"th")," root."),l("p",{className:"jsx-1515271254 func indent"},l("span",{className:"jsx-1515271254 monospace"},"f6"),": Take log with base 8. This rejects input 0."),l("p",{className:"jsx-1515271254 func indent"},l("span",{className:"jsx-1515271254 monospace"},"f7"),": Add 16."),l("p",{className:"jsx-1515271254 func indent"},l("span",{className:"jsx-1515271254 monospace"},"f8"),": Subtract 1."),l("p",{className:"jsx-1515271254 func indent"},l("span",{className:"jsx-1515271254 monospace"},"f9"),": Rotate the digits by 12. This rejects inputs with fractional components."),l("p",{className:"jsx-1515271254"},"At this point, it is possible to work on the final. The final asks for the smallest number that yields ",l("span",{className:"jsx-1515271254 monospace"},"100329695502969311279468679588205363492144732138"),". The following is a strategy on how to solve the final part."),l("p",{className:"jsx-1515271254 indent"},"The number output isn't very nice, but if you undo a rotation, you get the number 199123",l("sup",{className:"jsx-1515271254"},"9"),'; this implies that the number starts with 91. Since there is a "19", it\'s reasonable to try a 0 next, so we get ',l("span",{className:"jsx-1515271254 monospace"},"fx(910x) = 9123")," (Noting that the first digits of this number already match with our first functions). Checking the functions that don't change the number much gives ",l("span",{className:"jsx-1515271254 monospace"},"9107"),"."),l("p",{className:"jsx-1515271254"},"Upon solving this question, we receive a second question; find seven functions such that ",l("span",{className:"jsx-1515271254 monospace"},"563949338624")," is converted into ",l("span",{className:"jsx-1515271254 monospace"},"6908720"),", with integer results in between each function."),l("p",{className:"jsx-1515271254 indent"},"Note that the input is 224",l("sup",{className:"jsx-1515271254"},"5"),". This implies that the innermost function is ",l("span",{className:"jsx-1515271254 monospace"},"f5"),"."),l("p",{className:"jsx-1515271254 indent"},"Since 224 is divisible by 14, we can see that ",l("span",{className:"jsx-1515271254 monospace"},"f3")," is a reasonable next step."),l("p",{className:"jsx-1515271254 indent"},"On the other side, the output is divisible by 13. Since it's divisible by 13, we can guess that the outermost function is ",l("span",{className:"jsx-1515271254 monospace"},"f4"),". This gives 531440, which is 3",l("sup",{className:"jsx-1515271254"},"12")," - 1; this implies that the next two functions are ",l("span",{className:"jsx-1515271254 monospace"},"f8")," and ",l("span",{className:"jsx-1515271254 monospace"},"f2"),". This leaves a gap of two functions which take a number from 16 to 12. Trial and error (or noticing that log",l("sub",{className:"jsx-1515271254"},"8")," would work nicely with the powers of 2 we have there) shows that we can do log",l("sub",{className:"jsx-1515271254"},"8"),"(16",l("sup",{className:"jsx-1515271254"},"9"),") = 12."),l("p",{className:"jsx-1515271254 indent"},"Thus, the answer here is ",l("span",{className:"jsx-1515271254 monospace"},"4826135"),"."),l("p",{className:"jsx-1515271254"},"Note that each function has an associated number between 1 and 26 (",l("span",{className:"jsx-1515271254 monospace"},"f0"),', for instance, has "19"). If we convert those numbers to letters, and order by the two answers of the final, we get the answer ',l(c.a,null,"LISP MACHINE"),"."),l("div",{className:"jsx-1515271254 row"},l("table",{className:"jsx-1515271254 bordered"},l("tbody",{className:"jsx-1515271254"},l("tr",{className:"jsx-1515271254"},l("td",{className:"jsx-1515271254"},"Question 1"),l("td",{className:"jsx-1515271254"},"9"),l("td",{className:"jsx-1515271254"},"1"),l("td",{className:"jsx-1515271254"},"0"),l("td",{className:"jsx-1515271254"},"7")),l("tr",{className:"jsx-1515271254"},l("td",{className:"jsx-1515271254"},"Number"),l("td",{className:"jsx-1515271254"},"12"),l("td",{className:"jsx-1515271254"},"9"),l("td",{className:"jsx-1515271254"},"19"),l("td",{className:"jsx-1515271254"},"16")),l("tr",{className:"jsx-1515271254"},l("td",{className:"jsx-1515271254"},"Letter"),l("td",{className:"jsx-1515271254"},"L"),l("td",{className:"jsx-1515271254"},"I"),l("td",{className:"jsx-1515271254"},"S"),l("td",{className:"jsx-1515271254"},"P"))))),l("div",{className:"jsx-1515271254"}),l("div",{className:"jsx-1515271254 row"},l("table",{className:"jsx-1515271254 bordered"},l("tbody",{className:"jsx-1515271254"},l("tr",{className:"jsx-1515271254"},l("td",{className:"jsx-1515271254"},"Question 2"),l("td",{className:"jsx-1515271254"},"4"),l("td",{className:"jsx-1515271254"},"8"),l("td",{className:"jsx-1515271254"},"2"),l("td",{className:"jsx-1515271254"},"6"),l("td",{className:"jsx-1515271254"},"1"),l("td",{className:"jsx-1515271254"},"3"),l("td",{className:"jsx-1515271254"},"5")),l("tr",{className:"jsx-1515271254"},l("td",{className:"jsx-1515271254"},"Number"),l("td",{className:"jsx-1515271254"},"13"),l("td",{className:"jsx-1515271254"},"1"),l("td",{className:"jsx-1515271254"},"3"),l("td",{className:"jsx-1515271254"},"8"),l("td",{className:"jsx-1515271254"},"9"),l("td",{className:"jsx-1515271254"},"14"),l("td",{className:"jsx-1515271254"},"5")),l("tr",{className:"jsx-1515271254"},l("td",{className:"jsx-1515271254"},"Letter"),l("td",{className:"jsx-1515271254"},"M"),l("td",{className:"jsx-1515271254"},"A"),l("td",{className:"jsx-1515271254"},"C"),l("td",{className:"jsx-1515271254"},"H"),l("td",{className:"jsx-1515271254"},"I"),l("td",{className:"jsx-1515271254"},"N"),l("td",{className:"jsx-1515271254"},"E"))))),l("p",{className:"jsx-1515271254"},"Note: The statement of the question suggests trying 904, since that's one of the first numbers that yields a 5-digit result before using 9. This is in order to show that 9 is not the identity.")),l(n.a,{id:"1515271254"},["div.jsx-1515271254{-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin-top:40px;}","table.jsx-1515271254{margin-bottom:40px;}",".indent.jsx-1515271254{margin-left:4ex;}",".func.jsx-1515271254{margin-top:2px;margin-bottom:2px;}"]))}},JaDn:function(s,e,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/solutions/functional-analysis",function(){return a("D3CO")}])},KtV6:function(s,e,a){"use strict";a.d(e,"a",(function(){return x}));var t=a("MX0m"),n=a.n(t),i=a("q1tI"),o=a.n(i),c=a("8Kt/"),l=a.n(c),m=a("qTru"),r=a("otFC"),p=o.a.createElement,x=function(s){var e=s.children;return p("strong",{className:"jsx-1605562794 monospace"},e,p(n.a,{id:"1605562794"},[".monospace.jsx-1605562794{font-size:16px;}"]))};e.b=function(s){var e=s.title,a=s.slug,t=s.answer,i=s.authors,o=s.url,c=void 0===o?void 0:o,x=s.children;return p(m.a,null,p(l.a,null,p("meta",{name:"robots",content:"noindex",className:"jsx-2146329486"})),p("div",{className:"jsx-2146329486 center"},p(r.a,{title:"".concat(e," - Solution")}),i&&p("h3",{className:"jsx-2146329486"},i),p("h3",{className:"jsx-2146329486"},"Answer: ",p("span",{className:"jsx-2146329486 spoiler monospace"},t)),p("div",{className:"jsx-2146329486 link"},p("a",{href:"/stats/".concat(a),className:"jsx-2146329486"},"View Stats"),p("a",{href:c||"/puzzles/".concat(a),className:"jsx-2146329486"},"Back to Puzzle"))),x,p(n.a,{id:"2146329486"},[".link.jsx-2146329486{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;margin:20px 0 40px;}"]))}},otFC:function(s,e,a){"use strict";var t=a("MX0m"),n=a.n(t),i=a("q1tI"),o=a.n(i),c=a("8Kt/"),l=a.n(c),m=o.a.createElement;e.a=function(s){var e=s.title,a=s.pageTitle,t=s.suppressPageTitle,i=s.removeMargin,c=s.id,r=a||e;return m(o.a.Fragment,null,!t&&m(l.a,null,m("title",{className:"jsx-1930915425"},r)),m("h1",{id:c,className:"jsx-1930915425 "+((i?"nomargin":"")||"")},m("span",{className:"jsx-1930915425"},e)),m(n.a,{id:"1930915425"},["h1.jsx-1930915425{text-align:center;word-wrap:break-word;}",".nomargin.jsx-1930915425{margin:0px;}","span.jsx-1930915425{background-color:rgba(255,255,255,0.5);padding:0 16px;}","@media (max-width:800px){h1.jsx-1930915425{font-size:40px;line-height:40px;}}"]))}}},[["JaDn",1,0,2]]]);